//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.3

use crate::dao::item::LocType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Default)]
#[sea_orm(table_name = "item")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub owner: i32,
    pub item_id: i32,
    pub count: i64,
    pub enchant_level: i32,
    pub loc: LocType, //default inventory
    #[sea_orm(column_type = "JsonBinary")]
    pub variables: Json,
    #[sea_orm(column_type = "JsonBinary")]
    pub variations: Json,
    pub loc_data: i32,
    pub time_of_use: i32,
    pub custom_type1: i32,
    pub custom_type2: i32,
    #[sea_orm(column_type = "Decimal(Some((5, 0)))")]
    pub mana_left: Decimal,
    #[sea_orm(column_type = "Decimal(Some((13, 0)))")]
    pub time: Decimal,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::character::Entity",
        from = "Column::Owner",
        to = "super::character::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Character,
}

impl Related<super::character::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Character.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
