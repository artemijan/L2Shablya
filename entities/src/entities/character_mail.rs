//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "character_mail")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub subject: String,
    pub message: Option<String>,
    pub items: String,
    pub sender: Option<i32>,
    pub recipient: Option<i32>,
    pub expire_at: DateTimeWithTimeZone,
    pub request_adena: i32,
    pub is_unread: bool,
    pub is_returned: bool,
    pub is_deleted: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::character::Entity",
        from = "Column::Recipient",
        to = "super::character::Column::Id",
        on_update = "NoAction",
        on_delete = "SetNull"
    )]
    Character2,
    #[sea_orm(
        belongs_to = "super::character::Entity",
        from = "Column::Sender",
        to = "super::character::Column::Id",
        on_update = "NoAction",
        on_delete = "SetNull"
    )]
    Character1,
}

impl ActiveModelBehavior for ActiveModel {}
